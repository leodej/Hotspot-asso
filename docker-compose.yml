version: '3.8'

services:
  app:
    build: .
    container_name: mikrotik-manager-app
    ports:
      - "5000:5000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - DATABASE_URL=sqlite:///data/mikrotik_manager.db
    restart: unless-stopped
    networks:
      - mikrotik-network

  nginx:
    image: nginx:alpine
    container_name: mikrotik-manager-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - mikrotik-network

  prometheus:
    image: prom/prometheus:latest
    container_name: mikrotik-manager-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - mikrotik-network

  grafana:
    image: grafana/grafana:latest
    container_name: mikrotik-manager-grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    restart: unless-stopped
    networks:
      - mikrotik-network

volumes:
  prometheus_data:
  grafana_data:

networks:
  mikrotik-network:
    driver: bridge
